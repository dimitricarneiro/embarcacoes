name: Run tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Criar banco de dados para testes
        run: |
          python -c "from app import create_app, db; app = create_app(); \
          ctx = app.app_context(); ctx.push(); db.create_all(); ctx.pop()"

      - name: Criar usu√°rios de teste
        run: |
          python -c "from app import create_app, db; app = create_app(); \
          from app.models import Usuario; \
          ctx = app.app_context(); ctx.push(); \
          if not Usuario.query.filter_by(username='admin').first(): \
              admin = Usuario(username='admin', role='RFB'); \
              admin.set_password('123456'); \
              db.session.add(admin); \
          if not Usuario.query.filter_by(username='usuario').first(): \
              user1 = Usuario(username='usuario', role='comum'); \
              user1.set_password('123456'); \
              db.session.add(user1); \
          if not Usuario.query.filter_by(username='usuario2').first(): \
              user2 = Usuario(username='usuario2', role='comum'); \
              user2.set_password('123456'); \
              db.session.add(user2); \
          db.session.commit(); ctx.pop();"

      - name: Run Pytest
        run: python -m pytest
